select 1+1 from dual;
select COUNT(avg) from dual;
SELECT CONCAT(last_name,', ',first_name) full_name FROM mytable ORDER BY full_name;
select distinct last_name as alias1,job_id as alias2,salary as alias3 from employees as alias4 left join boss as alias5 on id = (select salary from employee where age = 30) where job_id0=(select job_id1 from employees1 where employee_id1=141) and salary1 > (select salary2 from employees2 where employee_id2='gjc') GROUP BY salary ASC  Having salary > 100 ORDER by id limit 3 for update
select distinct last_name as alias1,job_id as alias2,salary as alias3, (select skill from employees where skillname = 'linux') from employees as alias4 left join boss as alias5 on id = (select salary from employee where age = 30) where job_id0=(select job_id1 from employees1 where employee_id1=141) and salary1 > (select salary2 from employees2 where employee_id2='gjc') GROUP BY salary ASC  Having salary > 100 ORDER by id limit 3 for update
select y,sum(c1) as m1,sum(c2) as m2,sum(c3) as m3,sum(c4) as m4,sum(c5) as m5,sum(c6) as m6, sum(c7) as m7,sum(c8) as m8,sum(c9) as m9,sum(c10) as m10,sum(c11) as m11,sum(c12) as m12 from ( select y, case m when 1 then c else 0 end as c1, case m     when 2 then c else 0 end as c2, case m when 3 then c else 0 end as c3, case m when 4 then c else 0 end as c4, case m when     5 then c else 0 end as c5, case m when 6 then c else 0 end as c6, case m when 7 then c else 0 end as c7, case m when 8 then     c else 0 end as c8, case m when 9 then c else 0 end as c9, case m when 10 then c else 0 end as c10, case m when 11 then c     else 0 end as c11, case m when 12 then c else 0 end as c12 from ( select y,m,count(s_date) as c from ( select datepart(year    ,convert(DateTime, date)) as y, datepart(month,convert(DateTime,date)) as m , s_date from exam)  as T1 group by T1.y,T1.m )     as T2) as T3 group by T3.y
CREATE TABLE t1 (s1 INT, s2 CHAR(5) NOT NULL); INSERT INTO t1 VALUES(100, 'abcde'); SELECT (SELECT s2 FROM t1);
select * from tbl where id > @tn
